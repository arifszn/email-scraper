{"version":3,"sources":["components/layouts/Navbar.js","components/layouts/Sidebar.js","components/Home.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","Fragment","className","to","src","alt","type","data-toggle","id","href","Sidebar","target","rel","Home","props","Error","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iPAiDeA,G,YA7CA,WACX,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKC,UAAU,+EACX,yBAAKA,UAAU,qFACX,kBAAC,IAAD,CAAMA,UAAU,0BAA0BC,GAAG,KACzC,gDAEJ,kBAAC,IAAD,CAAMD,UAAU,+BAA+BC,GAAG,KAC9C,yBAAKC,IAA8B,+BAAgCC,IAAI,WAG/E,yBAAKH,UAAU,kDACX,4BAAQA,UAAU,kDAAkDI,KAAK,SAASC,cAAY,YAC1F,0BAAML,UAAU,kBAExB,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,6BAEV,uBAAGA,UAAU,YACT,uBAAGA,UAAU,qBAAqBM,GAAG,wBAG7C,wBAAIN,UAAU,aAEV,uBAAGA,UAAU,WAAWO,KAAK,KACzB,uBAAGP,UAAU,kCAGrB,wBAAIA,UAAU,uBAEV,uBAAGA,UAAU,WAAWO,KAAK,KACzB,uBAAGP,UAAU,qBAIzB,4BAAQA,UAAU,kEAAkEI,KAAK,SAASC,cAAY,aAC1G,0BAAML,UAAU,uBCTrBQ,EA7BC,WACZ,OACI,kBAAC,IAAMT,SAAP,KACI,yBAAKC,UAAU,4BAA4BM,GAAG,WAC1C,wBAAIN,UAAU,OACV,wBAAIA,UAAU,wBACV,uBAAGO,KAAK,6BAA6BE,OAAO,SAASC,IAAI,sBAAsBV,UAAU,YACrF,yBAAKA,UAAU,qBACX,yBAAKE,IAA8B,iCAAkCC,IAAI,YACzE,0BAAMH,UAAU,yBAEpB,yBAAKA,UAAU,uCACX,0BAAMA,UAAU,yBAAhB,gBAEJ,uBAAGA,UAAU,4DAGrB,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,KAC1B,0BAAMD,UAAU,cAAhB,aACA,uBAAGA,UAAU,iCCD1BW,EAlBF,SAACC,GACV,OACI,kBAAC,IAAMb,SAAP,KACI,yBAAKC,UAAU,sBACZ,kBAAC,EAAD,MACC,yBAAKA,UAAU,qCACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,mBAAf,cCsBTa,EA/BD,WACV,OACI,kBAAC,IAAMd,SAAP,KACI,yBAAKC,UAAU,sBACX,yBAAKA,UAAU,uDACX,yBAAKA,UAAU,+EACf,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,0CACX,yBAAKA,UAAU,kCACf,wBAAIA,UAAU,kBAAd,QAEA,yBAAKA,UAAU,oDACf,sCACA,wBAAIA,UAAU,qBAAd,qDAGJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,8BACX,kBAAC,IAAD,CAAMA,UAAU,gCAAgCC,GAAI,KAApD,yBCJjBa,MAZf,WAEC,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,IACjC,kBAAC,IAAD,CAAOM,UAAWJ,OCAFK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c95a8181.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'izitoast/dist/css/iziToast.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <nav className=\"navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n                <div className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n                    <Link className=\"navbar-brand brand-logo\" to=\"/\">\r\n                        <h3>Visitor Counter</h3>\r\n                    </Link>\r\n                    <Link className=\"navbar-brand brand-logo-mini\" to=\"/\">\r\n                        <img src={process.env.PUBLIC_URL + '/assets/images/logo-mini.svg'} alt=\"logo\" />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"navbar-menu-wrapper d-flex align-items-stretch\">\r\n                    <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\">\r\n                        <span className=\"mdi mdi-menu\"></span>\r\n                    </button>\r\n                <ul className=\"navbar-nav navbar-nav-right\">\r\n                    <li className=\"nav-item full-screen-link\">\r\n                        {/* eslint-disable-next-line */}\r\n                        <a className=\"nav-link\">\r\n                            <i className=\"mdi mdi-fullscreen\" id=\"fullscreen-button\"></i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item \">\r\n                        {/* eslint-disable-next-line */}\r\n                        <a className=\"nav-link\" href=\"#\">\r\n                            <i className=\"mdi mdi-format-line-spacing\"></i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item nav-logout\">\r\n                        {/* eslint-disable-next-line */}\r\n                        <a className=\"nav-link\" href=\"#\">\r\n                            <i className=\"mdi mdi-power\"></i>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n                    <span className=\"mdi mdi-menu\"></span>\r\n                </button>\r\n                </div>\r\n            </nav>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav-item nav-profile\">\r\n                        <a href=\"https://arifszn.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"nav-link\">\r\n                            <div className=\"nav-profile-image\">\r\n                                <img src={process.env.PUBLIC_URL + '/assets/images/faces/face1.jpg'} alt=\"profile\" />\r\n                                <span className=\"login-status online\"></span>\r\n                            </div>\r\n                            <div className=\"nav-profile-text d-flex flex-column\">\r\n                                <span className=\"font-weight-bold mb-2\">Ariful Alam</span>\r\n                            </div>\r\n                            <i className=\"mdi mdi-bookmark-check text-success nav-profile-badge\"></i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">\r\n                            <span className=\"menu-title\">Dashboard</span>\r\n                            <i className=\"mdi mdi-home menu-icon\"></i>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport Navbar from './layouts/Navbar';\r\nimport Sidebar from './layouts/Sidebar';\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container-scroller\">\r\n               <Navbar/>\r\n                <div className=\"container-fluid page-body-wrapper\">\r\n                    <Sidebar/>\r\n                    <div className=\"main-panel\">\r\n                        <div className=\"content-wrapper\">\r\n                            HELLO\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container-scroller\">\r\n                <div className=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n                    <div className=\"content-wrapper d-flex align-items-center text-center error-page bg-primary\">\r\n                    <div className=\"row flex-grow\">\r\n                        <div className=\"col-lg-7 mx-auto text-white\">\r\n                        <div className=\"row align-items-center d-flex flex-row\">\r\n                            <div className=\"col-lg-6 text-lg-right pr-lg-4\">\r\n                            <h1 className=\"display-1 mb-0\">404</h1>\r\n                            </div>\r\n                            <div className=\"col-lg-6 error-page-divider text-lg-left pl-lg-4\">\r\n                            <h2>SORRY!</h2>\r\n                            <h3 className=\"font-weight-light\">The page youâ€™re looking for was not found.</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-5\">\r\n                            <div className=\"col-12 text-center mt-xl-2\">\r\n                                <Link className=\"text-white font-weight-medium\" to={'/'}>Back to home</Link>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Error;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport './assets/css/App.scss';\r\nimport Home from './components/Home';\r\nimport Error from './components/Error';\r\n\r\nfunction App() {\r\n\t\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" component={Home}/>\r\n\t\t\t\t<Route component={Error}/>\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}